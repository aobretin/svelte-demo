{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/ToDo-list.svelte",
    "../src/ToDo.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import { slide } from 'svelte/transition';\n\n\texport let todos = [];\n\n  const dispatch = createEventDispatcher();\n\n  function toggleToDo(id) {\n    dispatch('toggleToDoEvent', id);\n  }\n\n  function dragStart(e, id, completed) {\n    dispatch('dragStartEvent', { e, id, completed });\n  }\n</script>\n\n<style>\n  .list-group-item {\n    flex: 2;\n  }\n\n  .completed {\n    opacity: .5;\n    text-decoration: line-through;\n  }\n</style>\n\n  <ul class=\"list-group\">\n    {#if todos.length}\n      {#each todos as {title, id, completed} (id)}\n        <div\n          class=\"input-group mb-3\"\n          class:completed={completed}\n          on:dragstart={e => dragStart(e, id, completed)}\n          transition:slide\n          draggable=\"true\"\n        >\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input\n                bind:checked={completed}\n                on:click={() => toggleToDo(id)}\n                type=\"checkbox\"\n                aria-label=\"Checkbox for following text input\"\n              />\n            </div>\n          </div>\n          <li class=\"list-group-item\">{title}</li>\n        </div>\n      {/each}\n    {:else}\n      <li class=\"list-group-item\">\n        No tasks here\n      </li>\n    {/if}\n  </ul>\n",
    "<script>\n\timport axios from 'Axios';\n\timport { onMount } from 'svelte';\n\timport ToDoList from './ToDo-list.svelte';\n\timport ToDoAdd from './ToDo-add.svelte';\n\n\texport let URL;\n\n\tlet promise = getTodos();\n\tlet todos = [];\n\tlet toHighlight = '';\n\n\t$: doneTodos = todos.filter(todo => todo.completed);\n\t$: notDoneTodos = todos.filter(todo => !todo.completed);\n\n\tfunction toggleToDoEvent({detail: id}) {\n\t\tconst todoIndex = todos.findIndex(todo => todo.id === parseInt(id));\n\t\ttodos[todoIndex].completed = !todos[todoIndex].completed;\n\t}\n\n\tfunction addToDoEvent({detail: newToDo}) {\n\t\ttodos = [\n\t\t\tnewToDo,\n\t\t\t...todos\n\t\t]\n\t}\n\n\tfunction dragStartEvent({detail: data}) {\n\t\tif (data.completed) {\n\t\t\ttoHighlight = 'not-done';\n\t\t} else {\n\t\t\ttoHighlight = 'done';\n\t\t}\n\n    data.e.dataTransfer.setData(\"text\", JSON.stringify(data));\n  }\n\n\tfunction dragOverEvent(e) {\n\t\te.preventDefault();\n\t\te.dataTransfer.dropEffect = 'move';\n\t}\n\n\tfunction dropEvent(e) {\n\t\te.preventDefault();\n\n\t\tconst dragData = JSON.parse(e.dataTransfer.getData(\"text\"));\n\t\tconst completed = this.classList.contains('done');\n\n\t\ttoHighlight = '';\n\n\t\tif (completed !== dragData.completed) {\n\t\t\ttoggleToDoEvent({\n\t\t\t\tdetail: dragData.id\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction dragEndEvent() {\n\t\ttoHighlight = '';\n\t}\n\n\tasync function getTodos() {\n\t\tconst { data } = await axios.get(URL);\n\t \ttodos = data.slice(0, 10);\n\t}\n</script>\n\n<style>\n\t.done,\n\t.not-done {\n\t\ttransition: transform .5s, opacity .5s;\n\t}\n\n\t.show-drag {\n\t\ttransform: scale(1.1);\n\t}\n\n\t.hide-drag {\n\t\topacity: .2;\n\t}\n</style>\n\n<div class=\"container\">\n\t<h1 class=\"text-center\">Todo checker</h1>\n\t{#await promise}\n\t\t<h2 class=\"text-center mt-5\">Awaiting todos...</h2>\n\t{:then todos}\n\t\t<ToDoAdd\n\t\t\ttodos={todos}\n\t\t\ton:addToDoEvent={addToDoEvent}\n\t\t/>\n\n\t\t<div class=\"row\">\n\t\t\t<div\n\t\t\t\ton:drop={dropEvent}\n\t\t\t\ton:dragover={dragOverEvent}\n\t\t\t\ton:dragend={dragEndEvent}\n\t\t\t\tclass:show-drag={toHighlight === 'not-done'}\n\t\t\t\tclass:hide-drag={toHighlight === 'done'}\n\t\t\t\tclass=\"not-done col-sm-6 col-xs-12\"\n\t\t\t>\n\t\t\t\t<ToDoList\n\t\t\t\t\ttodos={notDoneTodos}\n\t\t\t\t\ton:toggleToDoEvent={toggleToDoEvent}\n\t\t\t\t\ton:dragStartEvent={dragStartEvent}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\ton:drop={dropEvent}\n\t\t\t\ton:dragover={dragOverEvent}\n\t\t\t\ton:dragend={dragEndEvent}\n\t\t\t\tclass:show-drag={toHighlight === 'done'}\n\t\t\t\tclass:hide-drag={toHighlight === 'not-done'}\n\t\t\t\tclass=\"done col-sm-6 col-xs-12\"\n\t\t\t>\n\t\t\t\t<ToDoList\n\t\t\t\t\ttodos={doneTodos}\n\t\t\t\t\ton:toggleToDoEvent={toggleToDoEvent}\n\t\t\t\t\ton:dragStartEvent={dragStartEvent}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t{:catch error}\n\t\t<h2 class=\"text-center mt-5\">OOOPS....</h2>\n\t{/await}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAkBE,gBAAgB,eAAC,CAAC,AAChB,IAAI,CAAE,CAAC,AACT,CAAC,AAED,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,EAAE,CACX,eAAe,CAAE,YAAY,AAC/B,CAAC;AC2CF,oBAAK,CACL,SAAS,eAAC,CAAC,AACV,UAAU,CAAE,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,AACvC,CAAC,AAED,UAAU,eAAC,CAAC,AACX,SAAS,CAAE,MAAM,GAAG,CAAC,AACtB,CAAC,AAED,UAAU,eAAC,CAAC,AACX,OAAO,CAAE,EAAE,AACZ,CAAC"
}